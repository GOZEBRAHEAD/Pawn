/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <engine>
#include <fun>
#include <fakemeta>
#include <hamsandwich>
#include <cstrike>
#include <orpheu>

#define PLUGIN "GunGame"
#define VERSION "#1.1"
#define AUTHOR "Im Author"

#define COMUNIDAD "XtremeGaming"

#if cellbits == 32
         #define OFFSET_BZ 235
#else
	#define OFFSET_BZ 268
#endif

#define cost(%1)	(%1 * 5)

const TASK_RESPAWN = 1740
const TASK_ARMAS = 2609
const TASK_SHOWHUD = 3540

new const NOMBRES[][] =
{
	"Glock", "Usp", "P228", "Deagle", "Fiveseven", "Elite", "Tmp", "Mac10", "Navy", "Ump45", "Escopeta (Normal)", "Escopeta (Rapida)", 
	"P90", "Scout", "Galil", "Famas", "M4A1", "Ak47", "SG552", "Aug", "AWP", "G3SG1", "SG550", "M249", "Granada"
}

new const GENERALES[][] =
{
	"weapon_glock18", "weapon_usp", "weapon_p228", "weapon_deagle", "weapon_fiveseven", "weapon_elite", "weapon_tmp", "weapon_mac10", 
	"weapon_mp5navy", "weapon_ump45", "weapon_m3", "weapon_xm1014", "weapon_p90", "weapon_scout", "weapon_galil", "weapon_famas", 
	"weapon_m4a1", "weapon_ak47", "weapon_sg552", "weapon_aug", "weapon_awp", "weapon_g3sg1", "weapon_sg550", "weapon_m249", "weapon_hegrenade"
}

new CSW_MAXAMMO[33] = {
	-2, 52, 0, 90, 1, 32, 1, 100, 90, 1, 120, 100, 100, 90, 90, 90, 100, 
	120, 30, 120, 200, 32, 90, 120, 90, 2, 35, 90, 90, 0, 100, -1, -1
}
new Trie:g_tClass;

// g_frags[0] = Frags normales | g_frags[1] = Frags en total

new g_level[33], g_arma[33], g_frags[33][2], g_MsgSayText, g_hud, g_fade, g_round_time;

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	register_clcmd("say", "hook_say")
	register_clcmd("drop", "bloquear")
	register_forward(FM_ClientKill, "kill")
	
	g_MsgSayText = get_user_msgid("SayText")
	g_fade = get_user_msgid("ScreenFade")
	g_hud = CreateHudSyncObj()
	g_round_time = get_user_msgid("RoundTime")
	
	RegisterHam(Ham_Killed, "player", "Ham_PlayerKilled", 1)
	RegisterHam(Ham_Spawn, "player", "Ham_PlayerSpawn_Post", 1)
	RegisterHam(Ham_Touch, "weaponbox", "HamWeaponBoxTouch", 1)
	
	set_msg_block(get_user_msgid("ClCorpse"), BLOCK_SET)
	
	register_event("HLTV", "round_start", "a", "1=0", "2=0")
	register_event("CurWeapon", "event_curweapon", "be", "1=1")
	
	register_message(g_round_time, "hud_roundTime")
	
	OrpheuRegisterHook(OrpheuGetFunction("HasRoundTimeExpired", "CHalfLifeMultiplay"), "orpheu__BlockGameConditions");
	// ========== BUY ZONE ========== //
	register_message(get_user_msgid("StatusIcon"), "MsgStatusIcon")
	
	remove_entity_name("info_map_parameters")
	remove_entity_name("func_buyzone")
	
	static ent; ent = create_entity("info_map_parameters")
	
	DispatchKeyValue(ent, "buying", "3")
	DispatchSpawn(ent)
	
	// ========== MENSAJES ========== //
	set_task(150.0, "mensajes", _, _, _, "b")
}

public hud_roundTime()	set_msg_arg_int(1, ARG_SHORT, get_timeleft())

public OrpheuHookReturn:orpheu__BlockGameConditions() {
	OrpheuSetReturn(false);
	return OrpheuSupercede;
}

public bloquear()	return 1;

public kill()	return FMRES_SUPERCEDE;

public HamWeaponBoxTouch(WeaponBox)
{
	dllfunc(DLLFunc_Think, WeaponBox)
	return 1;
}

public mensajes()
{
	switch(random_num(0, 14))
	{
		case 0: hns_print(0, "!tGunGame %s !gde !t%s", VERSION, COMUNIDAD)
		case 1, 2: hns_print(0, "!y[%s] !gGunGame creado por: !tIm Author !g& !tBlack Dragon", COMUNIDAD)
		case 3: hns_print(0, "!y[%s] !gGrupo de Facebook: !tfb.com/groups/XtremeGamingOficial", COMUNIDAD)
		case 4: hns_print(0, "!y[%s] !gPagina de Facebook: !tfb.com/comunidadxtreme", COMUNIDAD)
		case 5: hns_print(0, "!y[%s] !gUnite a nuestro grupo!: !tfb.com/groups/XtremeGamingOficial", COMUNIDAD)
		case 6: hns_print(0, "!y[%s] !gDale MG a nuestra pag. de Facebook: !tfb.com/comunidadxtreme", COMUNIDAD)
		case 7: hns_print(0, "!y[%s] !gRecomendanos a tus !tAmigos!g! :D", COMUNIDAD)
		case 8: hns_print(0, "!g%s, !t^"Mas que una simple comunidad^"", COMUNIDAD)
		case 9: hns_print(0, "!y[%s] !gQueres comprar !tAdmin!g?: !tXtremeGaming.com.ar", COMUNIDAD)
		case 10: hns_print(0, "!y[%s] !gQueres ver la !tPagina Web!g?: !tXtremeGaming.com.ar", COMUNIDAD)
		case 11: hns_print(0, "!y[%s] !gQueres tenerla !tRE GRANDE!g!?, visita: !tXtremeGaming.com.ar", COMUNIDAD)
		case 12: hns_print(0, "!y[%s] !gQueres ver !tporno !gsin !tproblemas!g?, visita: !tXtremeGaming.com.ar", COMUNIDAD)
		case 13: hns_print(0, "!y[%s] !gEscribi !t/server!g para ver los otros !tServidores!g!", COMUNIDAD)
		case 14: hns_print(0, "!gAguante !t%s!g carajo!", COMUNIDAD)
	}
}

public round_start()
{
	new asd = get_cvar_num("mp_roundtime")
	
	if (asd < 10)	asd = 20
	
	hns_print(0, "!gRONDA (MINUTOS): !t%d", asd)
}

// ========== BALAS INFINITAS ========== //
public event_curweapon(id)
{
	if (!is_user_alive(id))	return 0
	
	static weaponID; weaponID = read_data(2)
	if (weaponID == CSW_C4 || weaponID == CSW_KNIFE || weaponID == CSW_HEGRENADE || weaponID == CSW_SMOKEGRENADE || weaponID == CSW_FLASHBANG)
		return PLUGIN_CONTINUE;
	
	cs_set_user_bpammo(id, weaponID, CSW_MAXAMMO[weaponID])
	return 0
}

public Spawn(iEnt)
{
	if (pev_valid(iEnt))
	{
		static szClassName[32]
		pev(iEnt, pev_classname, szClassName, charsmax(szClassName))
		
		if (!TrieKeyExists(g_tClass, szClassName))
		{
			RegisterHam(Ham_TraceAttack, szClassName, "TraceAttack", 1)
			TrieSetCell(g_tClass, szClassName, 1)
		}
	}
}
// ========== SAY ========== //
public hook_say(id)
{
	static g_say[192]
	read_args(g_say, charsmax(g_say))
	remove_quotes(g_say)
	trim(g_say)
	
	if (!is_user_connected(id) || equal(g_say, "") || equal(g_say, " ") || containi(g_say, "%s") != -1)	return 1;
	
	static stat[32], team, name[32];
	team = get_user_team(id)
	get_user_name(id, name, charsmax(name))
	
	formatex(stat, charsmax(stat), "%s", (team == 3) ? "[SPECT] " : (!is_user_alive(id)) ? "[MUERTO] " : "")
	
	format(g_say, charsmax(g_say), "^x01%s^x04[Lvl: %d]^x03 %s^x01: %s", stat, g_level[id], name, g_say)
	color_chat(0, id, g_say)
	
	return PLUGIN_HANDLED_MAIN;
}

public color_chat(playerid, colorid, message[])
{
	message_begin(playerid ? MSG_ONE_UNRELIABLE : MSG_ALL, g_MsgSayText, {0, 0, 0}, playerid)
	write_byte(colorid)
	write_string(message)
	message_end()
}
// ========== BUY ZONE ========== //
public MsgStatusIcon( msg_id, msg_dest, id ) 
{
	static szIcon[ 8 ];
	get_msg_arg_string( 2, szIcon, charsmax(szIcon) );
	
	static const BuyZone[ ] = "buyzone";
	
	if( equal( szIcon, BuyZone ) ) {
		set_pdata_int( id, OFFSET_BZ, get_pdata_int( id, OFFSET_BZ, 5 ) & ~( 1 << 0 ), 5 );
		
		return PLUGIN_HANDLED;
	}
	return PLUGIN_CONTINUE;
}

public client_putinserver(id)
{
	g_level[id] = 1;
	g_frags[id] = { 0, 0 };
	g_arma[id] = 0;
	
	set_task(1.2, "ShowHUD", id + TASK_SHOWHUD, _, _, "b")
}

public client_disconnect(id)
{
	remove_task(id + TASK_RESPAWN)
	remove_task(id + TASK_ARMAS)
	remove_task(id + TASK_SHOWHUD)
}

public Ham_PlayerKilled(victim, attacker, shouldgib)
{
	if (!is_user_connected(attacker) || victim == attacker)	return;
	
	if (get_user_weapon(attacker) != CSW_KNIFE)	g_frags[attacker][0]++, g_frags[attacker][1]++
	else
	{
		static att[32], vic[32]
		get_user_name(attacker, att, charsmax(att))
		get_user_name(victim, vic, charsmax(vic))
		
		g_frags[attacker][0] += g_frags[attacker][1] += 2;
		
		(g_frags[victim][0] >= 2) ? (g_frags[victim][0] -= 2) : (chequear_frags(victim)) 
		
		hns_print(0, "!t[%s] !y%s !gle robo 2 frags a !y%s", COMUNIDAD, att, vic)
	}
	
	checklevel(attacker)
	
	set_task(2.5, "revivir", victim + TASK_RESPAWN)
}

public chequear_frags(id)
{
	if (!is_user_connected(id))	return;
	
	(g_level[id] > 1) ? (g_level[id]--) : (g_level[id] = 1)
	
	message_begin(MSG_ONE_UNRELIABLE, g_fade, _, id)
	write_short(4096)
	write_short(4096)
	write_short(4096)
	write_byte(100)
	write_byte(0)
	write_byte(0)
	write_byte(75)
	message_end()
	
	g_frags[id][0] = (g_frags[id][1] - 2)
}

public checklevel(id)
{
	if (g_level[id] == 25)
	{
		static name[32]; get_user_name(id, name, charsmax(name))
		
		hns_print(0, "!t[%s] !gEl jugador !y%s !ggano!", COMUNIDAD, name)
	}
	else
	{
		while (g_frags[id][0] >= cost(g_level[id]))
		{
			g_level[id]++
			g_arma[id]++
			g_frags[id][0] = 0;
			actualizar_arma(id)
		}
	}
}

public actualizar_arma(id)
{
	if (is_user_alive(id))
	{
		strip_user_weapons(id)
		give_item(id, "weapon_knife")
		give_item(id, GENERALES[g_arma[id]])
		
		message_begin(MSG_ONE_UNRELIABLE, g_fade, _, id)
		write_short(4096)
		write_short(4096)
		write_short(4096)
		write_byte(0)
		write_byte(100)
		write_byte(0)
		write_byte(75)
		message_end()
	}
}

public revivir(id)
{
	id -= TASK_RESPAWN
	if (!is_user_connected(id))	return;
	
	ExecuteHamB(Ham_CS_RoundRespawn, id)
	
	set_user_godmode(id, 1)
	set_rendering(id, kRenderFxGlowShell, 200, 0, 0, kRenderNormal, 16)
	
	set_task(3.0, "sacar_god", id)
}

public sacar_god(id)
{
	if (!is_user_alive(id))	return;
	
	set_user_godmode(id, 0)
	set_rendering(id)
}

public Ham_PlayerSpawn_Post(id)
{
	if (!is_user_alive(id))	return;
	
	set_task(0.5, "dar_armas", id + TASK_ARMAS)
}

public dar_armas(id)
{
	id -= TASK_ARMAS
	if (!is_user_alive(id))	return;
	
	strip_user_weapons(id)
	give_item(id, "weapon_knife")
	give_item(id, GENERALES[g_arma[id]])
}

public ShowHUD(id)
{
	id -= TASK_SHOWHUD
	
	if (!is_user_connected(id))	return;
	
	set_hudmessage(255, 255, 255, -1.0, 0.03, 0, 6.0, 12.0)	
	ShowSyncHudMsg(id, g_hud, "Nivel: %d / 25 | Frags: %d / %d^nArma: %s", g_level[id], g_frags[id][0], cost(g_level[id]), NOMBRES[g_arma[id]])
}

stock hns_print(const index, const input[], any:...)
{
	new count = 1, players[32], len
	static msg[192]
	
	len = formatex(msg,charsmax( msg ), "");
	vformat(msg[len], charsmax(msg), input, 3)
	msg[191] = '^0';
	
	replace_all(msg, 190, "!y", "^4") // Green Color
	replace_all(msg, 190, "!g", "^1") // Default Color
	replace_all(msg, 190, "!t", "^3") // Team Color
	
	if (index) players[0] = index; else get_players(players, count, "ch")
	{
		for (new i = 0; i < count; i++)
		{
			if (is_user_connected(players[i]))
			{
				message_begin(MSG_ONE_UNRELIABLE, g_MsgSayText, _, players[i])
				write_byte(players[i]);
				write_string(msg);
				message_end();
			}
		}
	}
}

public plugin_end()	TrieDestroy(g_tClass) // Balas infinitas
